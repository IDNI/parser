@use char class eof, alnum, alpha, space, printable.

@trim _, __.
@inline char classes, parse_input_char.

# TGF grammar
start                  => _ [ statement (_ '.' _ statement)* _ ].

# common rules
_                      => [ __ ].               # optional whitespace
__                     => (space | comment) _.  # whitespace (includes comments)
comment                => '#' (printable | '\t')* ('\r' | '\n' | eof).

quoted_string          => '"' quoted_string_char* '"'.
quoted_string_char     => unescaped_s | escaped_s.
unescaped_s            => (space | printable) & ~( '"' | '\\' ).
escaped_s              => '\\' ('"' | '\\' | '/' | 'b' | 'f' | 'n' | 'r' | 't').

filename               => quoted_string.
symbol                 => (alpha | '_') (alnum | '_')*.

parse_input            => quoted_string.
parse_input            => parse_input_char_seq.
parse_input_char_seq   => parse_input_char+.
parse_input_char       => printable | '\t'.

# statement
statement              => grammar_cmd | internal_grammar_cmd | unreachable_cmd
                        | reload_cmd | load_cmd | start_cmd
                        | help | version | quit | clear
                        | get | set | toggle | enable | disable | add | del
                        | parse_file_cmd | parse_cmd.

parse_cmd              => ("p" | "parse"):parse_sym __ parse_input.
parse_file_cmd         => ("f" | "pf"
				| "parse file"):parse_file_sym __ filename.
grammar_cmd            => ("g" | "grammar"):grammar_sym. # [ __ symbol ].
internal_grammar_cmd   => ("i" | "ig" | "internal-grammar"):internal_grammar_sym
				[ __ symbol ].
start_cmd              => ("s" | "start"):start_sym [ __ symbol ].
unreachable_cmd        => ("u" | "unreachable"):unreachable_sym [ __ symbol ].
reload_cmd             => ("r" | "reload"):reload_sym.
load_cmd               => ("l" | "load"):load_sym __ filename.
help                   => ("h" | "help"):help_sym [ __ cmd_symbol ].
version                => ("v" | "version"):version_sym.
quit                   => ("q" | "quit" | "e" | "exit"):quit_sym.
clear                  => ("cls" | "clear"):clear_sym.
add                    => "add":add_sym __ list_option __ symbol_list.
del                    => ("del" | "delete" | "rm" | "rem" | "remove"):del_sym
				__ list_option __ symbol_list.
get                    => "get":get_sym [ __ option ].
set                    => "set":set_sym __ option (__ | _ '=' _) option_value.
toggle                 => ("tog" | "toggle"):toggle_sym __ bool_option.
enable                 => ("en"  __ | "enable"  __):enable_sym  bool_option.
disable                => ("dis" __ | "disable" __):disable_sym bool_option.

cmd_symbol             => grammar_sym | internal_grammar_sym | unreachable_sym
			| start_sym | parse_sym | parse_file_sym
			| load_sym | reload_sym
                        | help_sym | quit_sym | version_sym | clear_sym
                        | get_sym | set_sym | add_sym | del_sym
                        | toggle_sym | enable_sym | disable_sym.

# options
option                 => bool_option
			| ("e" | "error-verbosity"):error_verbosity_opt
			| list_option.
bool_option            => ("s" | "status"):status_opt
			| ("c" | "color" | "colors"):colors_opt
			| ("a" | "ambiguity"
				| "print-ambiguity"):print_ambiguity_opt
                        | ("g" | "graphs" | "print-graphs"):print_graphs_opt
			| ("r" | "rules" | "print-rules"):print_rules_opt
			| ("f" | "facts" | "print-facts"):print_facts_opt
			| ("t" | "terminals"
				| "print-terminals"):print_terminals_opt
			| ("m" | "measure"
				| "measure-parsing"):measure_parsing_opt
			| ("me" | "measure-each" | "mep"
				| "measure-each-pos"):measure_each_pos_opt
			| ("mf" | "measure-forest"):measure_forest_opt
			| ("mp" | "measure-preprocess"):measure_preprocess_opt
                        | ("d" | "debug"):debug_opt
			| ("ad" | "auto-disambiguate"):auto_disambiguate_opt
			| ("tt" | "trim-terminals"):trim_terminals_opt
			| ("icc" | "inline-cc"
				| "inline-char-classes"):inline_cc_opt.
list_option            => ("nd" | "ndl" | "nodisambig-list"):nodisambig_list_opt
                        | "trim":trim_opt
			| ("tc" | "trim-children"):trim_children_opt
			| ("i" | "inline"):inline_opt.

# option values symbols
option_value           => option_value_true | option_value_false.
option_value           => error_verbosity.
option_value           => symbol_list.
# boolean option values
option_value_true      => "t" | "true"  | "on"  | "1" | "y" | "yes".
option_value_false     => "f" | "false" | "off" | "0" | "n" | "no".
# error verbosity values
error_verbosity        => ("b" | "basic"):basic_sym
			| ("d" | "detailed"):detailed_sym
			| ("r" | "rc" | "root-cause"):root_cause_sym.

# symbol list
symbol_list            => symbol (_ ',' _ symbol)*.